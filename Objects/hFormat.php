<?php
/**
 * Common Data Type Interface. Форматирование.
 * @copyright (c) 2014, Dmitriy Ivan
 */
namespace CDTI\Objects;

/**
 * форматированию подвержены
 * - все простые элементы
 * - даты и времена
 *
 * вопрос дня: есть такие объекты, которые имеют формат,
 * но не могут быть представлены как стандартные типы?
 * ответ: скорее нет, чем да.
 *
 * Поведение такое:
 * Форматирование может устанавливаеться для объекта
 * - на пролонгированное время;
 *   - если набор форматирования существует, оно заменяется;
 *   - форматирование существует, оно заменяется
 * - на время вызова метода;
 *   - если набор форматирования существует, то используется тот, что дан;
 *   - если форматирование существует, до используется тот, что дан;
 *
 * Проблема в том, что не хочется иметь на каждый объект по формату,
 * а хочется иметь видимость этого (как с классами);
 *
 * В итоге, ключ объекта форматирования формируется как из имени класса, так и из параметров объекта.
 * Причем при изменении параметров создается новый инстанс (immutable?);
 * Причем если мы меняем параметры в напр. конекртной строке, она обретает этот инстанс;
 * но если меняем у объекта форматирования без участия конкретной строки (синтаксис?),
 * то группа строк ссылающихся на этот инстанс получает новые свойства...
 *
 * @todo Future: IP, цвет, xml-элементы? json?
 */
interface hFormat
{
	/**
	 * Получить форматирование
	 * @return \theFramework\iFormat Форматирование
	 */
	public function getFormat();

	/**
	 * Задать Форматирование
	 * @param \theFramework\aFormat|\theFramework\Formats\aSet $_object
	 */
	public function setFormat($_object);

	/**
	 * Получить native строку
	 * или объект родственный \theFramework\theString
	 * @param bool|aSimple $_type
	 */
	function asString($_type = true);

	/**
	 * Получить native число
	 * или объект родственный \theFramework\theNumber
	 * @param bool|aSimple $_type
	 */
	function asNumber($_type = true);

	/**
	 * Получить native массив или
	 * или объект родственный \theFramework\theArray
	 * @param bool|aSimple $_type
	 */
	function asArray($_type = true, $_type_item = false);
}